	
	ViewComponent, bir Controller gibi çal???r, ancak daha küçük ve ba??ms?z bir mant?k birimidir.
Invoke metodu, ViewComponent'in ça?r?ld???nda çal??t?raca?? mant??? içerir. Yani, bu metot ViewComponent'in "giri? noktas?d?r".
Invoke ad?, bu mant???n, bir metot ça?r?s?(invocation) arac?l???yla ba?lat?ld???n? belirtir.

	Senkron i?lem, bir görevin tamamlanmas?n? bekleyen bir yürütme modelidir.
Bir i?lem, tamamen tamamlanmadan bir sonraki sat?ra geçilmez. Yani i?lemler s?ral? olarak yürütülür. E?er veri alma i?lemi çok uzun sürerse (örne?in, bir API ça?r?s? yap?yorsa), 
uygulama donmu? gibi görünür ve kullan?c? deneyimi olumsuz etkilenir.

	Asenkron i?lem, bir görevin tamamlanmas?n? beklemek yerine, i?lemi ba?lat?r ve di?er görevlerin çal??mas?na devam eder. 
Görev tamamland???nda, i?lem sonuçlar?na geri dönülür.

		Asenkronun Özellikleri:
		??lem, program?n ana ak???n? bloklamaz.
		Di?er i?lemler, uzun süren i?lemler devam ederken çal??abilir.
		Daha karma??k görünebilir, ancak yüksek performans sa?lar.


.asp-for özelliği, bir form öğesini doğrudan modeldeki bir özelliğe bağlar. Bu sayede hem model verilerinin forma, hem de form verilerinin modele otomatik olarak aktarılması sağlanır.

Partial View:
	Eğer veri işleme veya bir iş mantığına ihtiyaç duymayan, yalnızca bir HTML şablonunu parçalamak için bir yapı gerekiyorsa Partial View kullanılır.

	Genel Karşılaştırma
Özellik	Partial View	ViewComponent
İş Mantığı	İş mantığı içermez veya minimaldir.	İş mantığı barındırabilir.
Bağımsızlık	Kontrolöre bağımlıdır.	Kontrolörden bağımsızdır.
Performans	Performansı göreceli olarak daha düşüktür.	Daha optimize ve performanslıdır.
Veri Kaynağı	Geçerli modelden veri alır.	Kendi model ve verisini yönetebilir.
Test Edilebilirlik	Test edilmesi zordur.	Daha kolay test edilebilir.
